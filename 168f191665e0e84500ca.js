import"./style.css";import*as THREE from"three";import{PointerLockControls}from"three/examples/jsm/controls/PointerLockControls";import{GLTFLoader}from"three/examples/jsm/loaders/GLTFLoader.js";let camera,scene,renderer,controls;const objects=[];let raycaster,moveForward=!1,moveBackward=!1,moveLeft=!1,moveRight=!1,canJump=!1,prevTime=performance.now();const velocity=new THREE.Vector3,direction=new THREE.Vector3,vertex=new THREE.Vector3,color=new THREE.Color;function init(){camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e3),camera.position.y=10,camera.position.z=5,scene=new THREE.Scene,scene.background=new THREE.Color(0),scene.fog=new THREE.Fog(16777215,0,750);const e=new THREE.HemisphereLight(15658751,7829384,.75);e.position.set(.5,1,.75),scene.add(e),controls=new PointerLockControls(camera,document.body);const o=document.getElementById("blocker"),t=document.getElementById("instructions");t.addEventListener("click",(function(){controls.lock()})),controls.addEventListener("lock",(function(){t.style.display="none",o.style.display="none"})),controls.addEventListener("unlock",(function(){o.style.display="block",t.style.display=""})),scene.add(controls.getObject()),document.addEventListener("keydown",(function(e){switch(e.code){case"ArrowUp":case"KeyW":moveForward=!0;break;case"ArrowLeft":case"KeyA":moveLeft=!0;break;case"ArrowDown":case"KeyS":moveBackward=!0;break;case"ArrowRight":case"KeyD":moveRight=!0;break;case"Space":!0===canJump&&(velocity.y+=350),canJump=!1}})),document.addEventListener("keyup",(function(e){switch(e.code){case"ArrowUp":case"KeyW":moveForward=!1;break;case"ArrowLeft":case"KeyA":moveLeft=!1;break;case"ArrowDown":case"KeyS":moveBackward=!1;break;case"ArrowRight":case"KeyD":moveRight=!1}})),raycaster=new THREE.Raycaster(new THREE.Vector3,new THREE.Vector3(0,-1,0),0,10);let r=new THREE.PlaneGeometry(2e3,2e3,100,100);r.rotateX(-Math.PI/2);let n=r.attributes.position;for(let e=0,o=n.count;e<o;e++)vertex.fromBufferAttribute(n,e),vertex.x+=20*Math.random()-10,vertex.y+=2*Math.random(),vertex.z+=20*Math.random()-10,n.setXYZ(e,vertex.x,vertex.y,vertex.z);r=r.toNonIndexed(),n=r.attributes.position;const c=[];for(let e=0,o=n.count;e<o;e++)color.setHSL(.3*Math.random()+.5,.75,.25*Math.random()+.75),c.push(color.r,color.g,color.b);r.setAttribute("color",new THREE.Float32BufferAttribute(c,3));const i=new THREE.MeshBasicMaterial({wireframe:!0}),a=new THREE.Mesh(r,i);scene.add(a),(new GLTFLoader).load("/models/brain.gltf",(e=>{e.scene.scale.set(.025,.025,.025),scene.add(e.scene.children[0])})),renderer=new THREE.WebGLRenderer({antialias:!0}),renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement),window.addEventListener("resize",onWindowResize)}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function animate(){requestAnimationFrame(animate);const e=performance.now();if(!0===controls.isLocked){raycaster.ray.origin.copy(controls.getObject().position),raycaster.ray.origin.y-=10;const o=raycaster.intersectObjects(objects).length>0,t=(e-prevTime)/1e3;velocity.x-=10*velocity.x*t,velocity.z-=10*velocity.z*t,velocity.y-=9.8*100*t,direction.z=Number(moveForward)-Number(moveBackward),direction.x=Number(moveRight)-Number(moveLeft),direction.normalize(),(moveForward||moveBackward)&&(velocity.z-=400*direction.z*t),(moveLeft||moveRight)&&(velocity.x-=400*direction.x*t),!0===o&&(velocity.y=Math.max(0,velocity.y),canJump=!0),controls.moveRight(-velocity.x*t),controls.moveForward(-velocity.z*t),controls.getObject().position.y+=velocity.y*t,controls.getObject().position.y<10&&(velocity.y=0,controls.getObject().position.y=10,canJump=!0)}prevTime=e,renderer.render(scene,camera)}init(),animate();